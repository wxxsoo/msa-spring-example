plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	//사용중인 스프링부트 버전에서 자동으로 의존성을 가져온다
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'example.scg.gateway'
version = '0.0.1-SNAPSHOT'
//Java version
sourceCompatibility = '11'

//저장소 설정
repositories {
	// Maven Central 저장소에서 의존성을 가져오도록 설정
	mavenCentral()
	// Maven 리포지토리 URL 지정
	maven { url 'https://repo.spring.io/milestone' }
}

//변수 선언
ext {
	set('springCloudVersion', "Hoxton.SR9")
}
// 프로젝트 의존성 추가
dependencies {
	// implementation : 프로젝트 컴파일 과정에서 필요한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
//	implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery'
	// 로그 트레이싱
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

	// compileOnly : Gradle은 컴파일 클래스 경로에만 종속성을 추가
	compileOnly 'org.projectlombok:lombok'
	// annotationProcessor : 컴파일 시점으로 코드를 생성함.
	annotationProcessor 'org.projectlombok:lombok'
	// testImplementation :  test 시 필요한 dependency 관리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
}

// 사용할 의존성을 정의
// dependencies는 의존성을 추가되는 것이고,
// dependencyManagement는 어떤 artifact의 버전을 사용할지만 기술하고, 실제 의존성이 추가되는건 dependency에서 명시적으로 설정했을 때
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
