spring:
  profiles: dev
  message: Gateway Service - dev - Spring Cloud Bus, RabbitMQ 연동 Test!
  sleuth:
      sampler:
          probability: 1.0
  zipkin:
      base-url: http://localhost:9411
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
#      httpclient:
#        connect-timeout: 10000 #
#        response-timeout: 10s
      #      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway GlobalFilter
#            preLogger: true
#            postLogger: true
      # ID, 목적지(uri), 조건(Predicate), 필터로 구성된다.
      routes:
        - id: user-service
          uri: lb://user-service
#          uri: http://localhost:9000/
          # 각 요청을 처리하기 전에 실행되는 로직, 헤더와 입력돤값 등 다양한 HTTP 요청이 정의된 기준에 맞는지를 찾는다.
          # # 조건부 집합 Header나 Parameter같은 HTTP 요청의 모든 항목 비교
          predicates:
            - Path=/users/**
          filters:
            - name: UserSvcFilter
              args:
                baseMessage: Spring Cloud Gateway UserSvcFilter
                preLogger: true
                postLogger: true
        - id: post-service
          uri: lb://post-service
          predicates:
            - Path=/posts/**
            # 특정 날짜 이후 호출 가능
            # - After=2020-12-23T19:25:19.126+09:00[Asia/Seoul]
            # 특정 날짜 이전 호출이 가능
            # - Before=2020-12-01T19:25:19.126+09:00[Asia/Seoul]
            # 특정 날짜 사이에만 호출이 가능
            #- Between=2020-08-17T19:25:19.126+09:00[Asia/Seoul], 2020-12-11T19:25:19.126+09:00[Asia/Seoul]
          metadata:
            connect-timeout: 3000 #ms
            response-timeout: 3000 #ms
          filters:
            - name: Retry
              args:
                retries: 3 #재시도 횟수
                statuses: INTERNAL_SERVER_ERROR #재시도 HTTP Status
                methods: GET #재시도 메소드
                backoff: # backoff 설정 10ms(firstBackoff) * (2(factor)* 3(retries))으로 retires 반복
                  firstBackoff: 1000ms
                  maxBackoff: 6000ms
                  factor: 2
                  basedOnPreviousValue: false
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
